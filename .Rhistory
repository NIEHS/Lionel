install.packages("usethis")
library(usethis)
use_git_config(user.name = "hmoylan15", user.email = "hmoylan15")
getwd()
library(amadeus)
install.packages(amadeus)
install.packages("amadeus")
library(targets)
library(amadeus)
getwd()
setwd("//wine/moylanhm/Lionel")
install.packages("pak")
library(pak)
"pak::pkg_install(c('ropensci/chopin'))"
pak::pkg_install('ropensci/chopin')
detach("package:pak", unload = TRUE)
library(pak)
library(crew)
library(crew.cluster)
library(curl)
library(amadeus)
library(arcgislayers)
library(arcgisutils)
library(archive)
pak::pak_cleanup()
install.packages("pak")
pak::pak_update()
library(pak)
pak::pak("crew.cluster")
library(targets)
tar_destroy(store = "hmm_targets")
library(pak)
pak::pkg_install(c('ropensci/chopin'))
pak::pkg_install('ropensci/chopin')
pkgbuild::check_build_tools(debug = TRUE)
pkgbuild::check_build_tools(debug = TRUE)
library(pak)
pak::pkg_install('ropensci/chopin')
pak::pkg_install(c('ropensci/chopin'))
pkgbuild::check_build_tools(debug = TRUE)
pkgbuild::check_build_tools(debug = TRUE)
Sys.which("make")
pkgbuild::check_build_tools(debug = TRUE)
pkgbuild::check_build_tools(debug = TRUE)
library(targets)
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
sbtools::item_list_files("631405c8d34e36012efa31ff")
sbtools::item_list_files("631405c8d34e36012efa31ff")
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
tar_destroy(store = "hmm_targets")
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
?levels
ssurgo_files <- c(
"DrainageClass.zip",
"HydGrp.zip",
"Layer.zip",
"Text.zip",
"WtDep.zip",
"MUKEY90m.zip"
)
ssurgo_files <- "DrainageClass.zip"
m_raster <- rast("inst/data/ssurgo/MUKEY90m/MUKEY90m/MapunitRaster_CONUS_90m1.tif") %>%
setNames("mukey")
library(tidyverse)
m_raster <- rast("inst/data/ssurgo/MUKEY90m/MUKEY90m/MapunitRaster_CONUS_90m1.tif") %>%
setNames("mukey")
library(terra)
m_raster <- rast("inst/data/ssurgo/MUKEY90m/MUKEY90m/MapunitRaster_CONUS_90m1.tif") %>%
setNames("mukey")
tar_make(store = "hmm_targets")
m_raster <- rast("inst/data/ssurgo/dbfs/MUKEY90m/MapunitRaster_CONUS_90m1.tif") %>%
setNames("mukey")
View(m_raster)
levels(m_raster)
tar_make(store = "hmm_targets")
?setNames
?setNames
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
warnings()
warnings(store = "hmm_targets")
warnings_list <- warnings()
filtered_warnings <- warnings_list[!grepl("cannot resolve owner", warnings_list)]
filtered_warnings
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
?tolower
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
targets::tar_read(process_ssurgo)
targets::tar_read(process_ssurgo, store = "hmm_targets")
library(foreign)
dbf_path <- "inst/data/ssurgo/dbfs/DrainageClass/DrainageClass.dbf"
table <- read.dbf(dbf_path, as.is = TRUE)
str(table)
print(names(tbl))
print(names(table))
list.files("inst/data/ssurgo", pattern = "\\.tif$", full.names = TRUE)
library(foreign)
library(terra)
library(dplyr)
# Path to the .dbf
dbf_path <- "inst/data/ssurgo/dbfs/DrainageClass/DrainClass.dbf"
# Read table
tbl <- read.dbf(dbf_path, as.is = TRUE)
dbf_path <- "inst/data/ssurgo/dbfs/DrainageClass/DrainageClass.dbf"
tbl <- read.dbf(dbf_path, as.is = TRUE)
names(tbl) <- toupper(names(tbl))
View(tbl)
tbl$MUKEY <- as.character(tbl$MUKEY)
ssurgo_levels <- tbl %>%
dplyr::distinct(MUKEY, .keep_all = TRUE)
m_raster <- rast("inst/data/ssurgo/dbfs/MUKEY90m/MapunitRaster_CONUS_90m1.tif")
names(m_raster) <- "MUKEY"
View(m_raster)
m_raster <- rast("inst/data/ssurgo/dbfs/MUKEY90m/MapunitRaster_CONUS_90m1.tif")
m_raster <- rast("inst/data/ssurgo/dbfs/MUKEY90m/MapunitRaster_CONUS_90m1.tif")
names(m_raster) <- "MUKEY"
levels(m_raster) <- ssurgo_levels
output_path <- "inst/data/ssurgo/test_raster.tif"
dir.create(dirname(output_path), recursive = TRUE, showWarnings = FALSE)
writeRaster(m_raster, output_path, overwrite = TRUE)
writeRaster(m_raster, output_path, overwrite = TRUE)
tar_make(store = "hmm_targets")
tar_read(process_ssurgo)
tar_read(process_ssurgo, store = "hmm_targets")
list.files("inst/data/ssurgo", pattern = "\\.tif$", full.names = TRUE)
tar_read(process_ssurgo, store = "hmm_targets")
tar_make(store = "hmm_targets")
dbf_file <- list.files("inst/data/ssurgo/dbfs/DrainageClass", pattern = "\\.dbf$", full.names = TRUE)[1]
tbl <- read.dbf(dbf_file, as.is = TRUE)
names(tbl)
m_raster <- rast("inst/data/ssurgo/dbfs/MUKEY90m/MapunitRaster_CONUS_90m1.tif") %>%
setNames("MUKEY")
dbf_path <- list.files(unzip_ssurgo, pattern = "\\.dbf$", full.names = TRUE)[1]
ssurgo_files <- c(
"DrainageClass.zip",
"HydGrp.zip",
"Layer.zip",
"Text.zip",
"WtDep.zip",
"MUKEY90m.zip"
)
ssurgo_files <- "DrainageClass.zip"
item_id <- "631405c8d34e36012efa31ff"
download_dir <- "inst/data/ssurgo/zips"
dest_path <- file.path(download_dir, ssurgo_files)
sbtools::item_file_download(
sb_id = item_id,
names = ssurgo_files,
destinations = dest_path,
overwrite_file = TRUE
)
zip_name <- tools::file_path_sans_ext(basename(get_ssurgo))
zip_name <- tools::file_path_sans_ext(basename(dest_path))
extract_dir <- file.path("inst/data/ssurgo/dbfs", zip_name)
unzip(zipfile = get_ssurgo, exdir = extract_dir)
unzip(zipfile = dest_path, exdir = extract_dir)
dbf_path <- list.files(extract_dir, pattern = "\\.dbf$", full.names = TRUE)[1]
zip_basename <- tools::file_path_sans_ext(basename(dest_path))
output_path <- file.path("inst/data/ssurgo", paste0("mukey_raster_", zip_basename, ".tif"))
read.dbf(dbf_path, as.is = TRUE)
names(ssurgo_table) <- toupper(names(ssurgo_table))
names(read.dbf(dbf_path, as.is = TRUE)) <- toupper(names(ssurgo_table))
names(read.dbf(dbf_path, as.is = TRUE)) <- toupper(names(read.dbf(dbf_path, as.is = TRUE)))
?read.dbf()
dbf_table <- read.dbf(dbf_path, as.is = TRUE)
names(ssurgo_table) <- toupper(names(ssurgo_table))
names(dbf_table) <- toupper(names(dbf_table))
dbf_table$MUKEY <- as.character(dbf_table$MUKEY)
ssurgo_levels <- dbf_table %>%
dplyr::relocate(MUKEY, .before = everything()) %>%
dplyr::distinct(MUKEY, .keep_all = TRUE)
m_raster <- rast("inst/data/ssurgo/dbfs/MUKEY90m/MapunitRaster_CONUS_90m1.tif") %>%
setNames("MUKEY")
levels(m_raster) <- ssurgo_levels
dbf_table$MUKEY <- as.numeric(dbf_table$MUKEY)
levels(m_raster) <- ssurgo_levels
ssurgo_levels <- dbf_table %>%
dplyr::relocate(MUKEY, .before = everything()) %>%
dplyr::distinct(MUKEY, .keep_all = TRUE)
levels(m_raster) <- ssurgo_levels
dir.create(dirname(output_path), recursive = TRUE, showWarnings = FALSE)
writeRaster(m_raster, output_path, overwrite = TRUE)
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
tar_make(store = "hmm_targets")
ssurgo_levels <- ssurgo_table %>%
dplyr::relocate(MUKEY, .before = everything()) %>%
dplyr::distinct(MUKEY, .keep_all = TRUE)
tar_make(store = "hmm_targets")
